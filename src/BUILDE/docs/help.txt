											About iGame

    To promote public awareness of synthetic biology and introduce its basic ideas to the laymen,
our team is devoted to the development of an experimental video game which aims at instructing
non-biologists to design and improve biological systems. Following the games-with-a-purpose paradigm
in which players help solve scientific problems, we apply the human brain's puzzle-solving abilities
to the complex designs of biological systems. While most of developed simulation tools are designed
for experts to model the reaction networks from scratch, our game integrates a modeling environment
in which users only need to submit their assembling of parts for our program to discover and
generate the biological model automatically. With a mass of data for the use of modeling, we propose
the Standard Biological Parts Automatic Modeling Database Language, which enables descriptions of
complicated biological processes. Additionally, previous iGEM project models will be featured to
demonstrate the availability of our idea.


									Introduction step by step

1 Before getting start
Extract the tar, cd "path/igame/bin" and find the execute file igameUiMain, launch it! You need to load the 
database input file into db at the first run. Launch the igameUiMain execute file, push the "Load db" 
button, select the "path/igame/beta" directory, then confirm the selection. Push the "Get Started" button 
to get start!

2 Getting Start
Let's get start to build a system!
After loading database and push the "Get Started" button. There show a colorful screen in the right
window, we call it "scene" for convience, in which exists a round dish with a string in it reads "Flask" 
and a "trash can-like" icon, 
They represents the flask and the trash can respectively. One can put a substance into the flask dish to add
it to the system and throw one into the trash can to dispose it.
The left window can be divided into two parts. Above one is a overview area, which is very useful
when look through the builded system. The below is a substance generator consit of four combined
button and popup list, each represents one substance category. You can select all things exists in the database 
to build your system by using mouse from the generator. Just move your mouse cursor to the chosen category. 
select it and there show popup list, and use your mouse to highlight the items in the popup list,
which lead to show a icon represent the substance you select in the right window. And the icon can
be dragged to everyWhere in the colorful region. It is noticeable that only the icon exist in
the Flask dish was considered to be added to the system, those not in the Flask or was
dragged into the trash can were ignored. Above all is the introduction of basic scene and operation of our software.

2.1 Add a compartment
Select a compartment in the generator. And drag the generated round dish into the bigger one.
Put mouse cursor onto the new generated, there shows a line editor which is used for setting the
initial concentration of the compartment. If you move the cursor to the bigger one, shows a editor
as well which is used for setting the size of the compartment.
Compartment is a container, One can add other things to some compartment as well. It is recursive.
Our software consider this condition, When click the new added compartment, A new scene is created,
which has simliar appearance and operations.
When a new scene was created, changes happen in the left window. And for convience, the above region
of left window is named browser. A new item was inserted to the browser. Obviously, the new added 
item is the child of former one. In fact, we use a tree to represent the recursive scene. Those item in the 
browser is selectable and clickable by mouse. And the related scene is shown when the item was
select. By using the browser, one can quick look through all scenes.

2.2 Add a plasmidBackbone and biobricks
PlasmidBackbone is used to combine the biobricks. One could add a PlasmidBackbone to compartment in
the manner describle before. By putting mouse onto the icon, One can setting the initial
concentration of the plasmidBackBone as well. Doubleclick the PlasmidBackbone also genrate a new
scene. This scene is so much different from the compartment ones. I'd like to call it
Plasmid scene for convenience. Plasmid scene is used for combining the biobricks.
All biobricks in the scene is ordered, just drag the biobricks to the line. Pay attention to the
order of biobricks, this cout for much.

3 Review the input
The graphics item i just introduced provides a clear way to build a system. 
Before we call our modeling algorithm to generate the system model, the graphics system we just
built should be converted to text format.  We define a xml based standard file format for describle the builded
system, which is a part of our MoDeL language. By pushing the "Review" button, a xml file describles
the built system shows. You can examine the xml file and can go back to the graphics operation mode.

4 Generate the Model
After reviewing the input file followed by generating the system model. Our model algorithm reads
the input file as input and output a SBML file model, which is a standard for representing models of biological
processes. With the SBML format model file. Our software can cooperation with other biological
software tools, which is essential to a team-base software.

5 Simulate the Model
Push the "Simulate" button to simulate the model. We use third part programm "Copasi" to do this job. COPASI is a 
great software application for simulation and analysis of biochemical networks and their dynamics.
After pushing the "Simulate" button. The COPASI programm is executed, you can use it to see the
visual output data to evaluate the system design.

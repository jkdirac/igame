!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DataPlot	data_plot.cpp	/^DataPlot::DataPlot(QWidget*parent, PlotInputData &input) :$/;"	f	class:DataPlot	signature:(QWidget*parent, PlotInputData &input)
DataPlot	data_plot.h	/^    DataPlot(QWidget*, PlotInputData &input);$/;"	p	class:DataPlot	access:public	signature:(QWidget*, PlotInputData &input)
DataPlot	data_plot.h	/^class DataPlot : public QwtPlot$/;"	c	inherits:QwtPlot
DataPlot::DataPlot	data_plot.cpp	/^DataPlot::DataPlot(QWidget*parent, PlotInputData &input) :$/;"	f	class:DataPlot	signature:(QWidget*parent, PlotInputData &input)
DataPlot::DataPlot	data_plot.h	/^    DataPlot(QWidget*, PlotInputData &input);$/;"	p	class:DataPlot	access:public	signature:(QWidget*, PlotInputData &input)
DataPlot::alignScales	data_plot.cpp	/^void DataPlot::alignScales()$/;"	f	class:DataPlot	signature:()
DataPlot::alignScales	data_plot.h	/^    void alignScales();$/;"	p	class:DataPlot	access:private	signature:()
DataPlot::color_B	data_plot.h	/^    int color_R, color_G, color_B;$/;"	m	class:DataPlot	access:private
DataPlot::color_G	data_plot.h	/^    int color_R, color_G, color_B;$/;"	m	class:DataPlot	access:private
DataPlot::color_R	data_plot.h	/^    int color_R, color_G, color_B;$/;"	m	class:DataPlot	access:private
DataPlot::mPcurve	data_plot.h	/^    QwtPlotCurve *mPcurve;$/;"	m	class:DataPlot	access:private
DataPlot::plot	data_plot.cpp	/^void DataPlot::plot(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)$/;"	f	class:DataPlot	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
DataPlot::plot	data_plot.h	/^    void plot(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x);$/;"	p	class:DataPlot	access:public	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
DataPlot::setupCurve	data_plot.cpp	/^void DataPlot::setupCurve(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)$/;"	f	class:DataPlot	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
DataPlot::setupCurve	data_plot.h	/^    void setupCurve(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x);$/;"	p	class:DataPlot	access:private	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
DataPlot::setupUI	data_plot.cpp	/^void DataPlot::setupUI()$/;"	f	class:DataPlot	signature:()
DataPlot::setupUI	data_plot.h	/^    void setupUI();$/;"	p	class:DataPlot	access:private	signature:()
DataPlot::~DataPlot	data_plot.cpp	/^DataPlot::~DataPlot()$/;"	f	class:DataPlot	signature:()
DataPlot::~DataPlot	data_plot.h	/^    ~DataPlot();$/;"	p	class:DataPlot	access:public	signature:()
MainWindow	main.cpp	/^    MainWindow()$/;"	f	class:MainWindow	access:public	signature:()
MainWindow	main.cpp	/^class MainWindow: public QMainWindow$/;"	c	file:	inherits:QMainWindow
MainWindow::MainWindow	main.cpp	/^    MainWindow()$/;"	f	class:MainWindow	access:public	signature:()
PLOT_SIZE	data_plot.h	/^const int PLOT_SIZE = 500;      \/\/ 0 to 200$/;"	v
PlotInputData	plotInputData.cpp	/^PlotInputData::PlotInputData(const QVector < QVector <double> > &datay, const QVector< double > &datax)$/;"	f	class:PlotInputData	signature:(const QVector < QVector <double> > &datay, const QVector< double > &datax)
PlotInputData	plotInputData.cpp	/^PlotInputData::PlotInputData(const QVector< QVector <double> > &datay, $/;"	f	class:PlotInputData	signature:(const QVector< QVector <double> > &datay, const QVector< double > &datax, const QVector<QString> &label)
PlotInputData	plotInputData.h	/^		PlotInputData(const QVector <QVector <double> > &datay, $/;"	p	class:PlotInputData	access:public	signature:(const QVector <QVector <double> > &datay, const QVector< double > &datax)
PlotInputData	plotInputData.h	/^		PlotInputData(const QVector <QVector <double> > &datay, $/;"	p	class:PlotInputData	access:public	signature:(const QVector <QVector <double> > &datay, const QVector< double > &datax, const QVector<QString> &label)
PlotInputData	plotInputData.h	/^class PlotInputData$/;"	c
PlotInputData::PlotInputData	plotInputData.cpp	/^PlotInputData::PlotInputData(const QVector < QVector <double> > &datay, const QVector< double > &datax)$/;"	f	class:PlotInputData	signature:(const QVector < QVector <double> > &datay, const QVector< double > &datax)
PlotInputData::PlotInputData	plotInputData.cpp	/^PlotInputData::PlotInputData(const QVector< QVector <double> > &datay, $/;"	f	class:PlotInputData	signature:(const QVector< QVector <double> > &datay, const QVector< double > &datax, const QVector<QString> &label)
PlotInputData::PlotInputData	plotInputData.h	/^		PlotInputData(const QVector <QVector <double> > &datay, $/;"	p	class:PlotInputData	access:public	signature:(const QVector <QVector <double> > &datay, const QVector< double > &datax)
PlotInputData::PlotInputData	plotInputData.h	/^		PlotInputData(const QVector <QVector <double> > &datay, $/;"	p	class:PlotInputData	access:public	signature:(const QVector <QVector <double> > &datay, const QVector< double > &datax, const QVector<QString> &label)
PlotInputData::getDataBounds	plotInputData.cpp	/^const QRectF& PlotInputData::getDataBounds() const$/;"	f	class:PlotInputData	signature:() const
PlotInputData::getDataBounds	plotInputData.h	/^		const QRectF& getDataBounds() const;$/;"	p	class:PlotInputData	access:public	signature:() const
PlotInputData::getDatas	plotInputData.cpp	/^vector<QwtArrayData>& PlotInputData::getDatas()$/;"	f	class:PlotInputData	signature:()
PlotInputData::getDatas	plotInputData.h	/^		virtual vector< QwtArrayData>& getDatas();$/;"	p	class:PlotInputData	access:public	signature:()
PlotInputData::getLabels	plotInputData.cpp	/^const QVector<QString>& PlotInputData::getLabels() const$/;"	f	class:PlotInputData	signature:() const
PlotInputData::getLabels	plotInputData.h	/^		const QVector<QString>& getLabels() const;$/;"	p	class:PlotInputData	access:public	signature:() const
PlotInputData::mDatas	plotInputData.h	/^		vector< QwtArrayData > mDatas;$/;"	m	class:PlotInputData	access:private
PlotInputData::mLabels	plotInputData.h	/^		QVector<QString> mLabels;$/;"	m	class:PlotInputData	access:private
PlotInputData::mPlotBound	plotInputData.h	/^		QRectF mPlotBound;$/;"	m	class:PlotInputData	access:private
PlotInputData::setDataBounds	plotInputData.cpp	/^void PlotInputData::setDataBounds(QRectF &rec)$/;"	f	class:PlotInputData	signature:(QRectF &rec)
PlotInputData::setDataBounds	plotInputData.h	/^		void setDataBounds(QRectF &rec);$/;"	p	class:PlotInputData	access:public	signature:(QRectF &rec)
PlotInputData::~PlotInputData	plotInputData.cpp	/^PlotInputData::~PlotInputData()$/;"	f	class:PlotInputData	signature:()
PlotInputData::~PlotInputData	plotInputData.h	/^		virtual ~PlotInputData();$/;"	p	class:PlotInputData	access:public	signature:()
PlotToolWidget	plotToolWidget.cpp	/^PlotToolWidget::PlotToolWidget(QWidget*, PlotInputData& input)$/;"	f	class:PlotToolWidget	signature:(QWidget*, PlotInputData& input)
PlotToolWidget	plotToolWidget.h	/^		PlotToolWidget(QWidget*, PlotInputData& input);$/;"	p	class:PlotToolWidget	access:public	signature:(QWidget*, PlotInputData& input)
PlotToolWidget	plotToolWidget.h	/^class PlotToolWidget: public QDialog$/;"	c	inherits:QDialog
PlotToolWidget::PlotToolWidget	plotToolWidget.cpp	/^PlotToolWidget::PlotToolWidget(QWidget*, PlotInputData& input)$/;"	f	class:PlotToolWidget	signature:(QWidget*, PlotInputData& input)
PlotToolWidget::PlotToolWidget	plotToolWidget.h	/^		PlotToolWidget(QWidget*, PlotInputData& input);$/;"	p	class:PlotToolWidget	access:public	signature:(QWidget*, PlotInputData& input)
PlotToolWidget::mPlot	plotToolWidget.h	/^		DataPlot *mPlot;$/;"	m	class:PlotToolWidget	access:private
PlotToolWidget::plot	plotToolWidget.cpp	/^void PlotToolWidget::plot(const double **data, int row, int column)$/;"	f	class:PlotToolWidget	signature:(const double **data, int row, int column)
PlotToolWidget::plot	plotToolWidget.h	/^		void plot(const double **data, int row, int column);$/;"	p	class:PlotToolWidget	access:public	signature:(const double **data, int row, int column)
PlotToolWidget::refresh	plotToolWidget.cpp	/^void PlotToolWidget::refresh()$/;"	f	class:PlotToolWidget	signature:()
PlotToolWidget::refresh	plotToolWidget.h	/^		void refresh();$/;"	p	class:PlotToolWidget	access:public	signature:()
PlotToolWidget::~PlotToolWidget	plotToolWidget.cpp	/^PlotToolWidget::~PlotToolWidget()$/;"	f	class:PlotToolWidget	signature:()
PlotToolWidget::~PlotToolWidget	plotToolWidget.h	/^		~PlotToolWidget();$/;"	p	class:PlotToolWidget	access:public	signature:()
_DATA_PLOT_H	data_plot.h	2;"	d
_PLOT_INPUT_DATA_H_	plotInputData.h	2;"	d
_PLOT_TOOL_WIDGET_H_	plotToolWidget.h	2;"	d
alignScales	data_plot.cpp	/^void DataPlot::alignScales()$/;"	f	class:DataPlot	signature:()
alignScales	data_plot.h	/^    void alignScales();$/;"	p	class:DataPlot	access:private	signature:()
analys	main.cpp	/^bool analys(QString fileName, intgrtOutData ode_res)$/;"	f	signature:(QString fileName, intgrtOutData ode_res)
color_B	data_plot.h	/^    int color_R, color_G, color_B;$/;"	m	class:DataPlot	access:private
color_G	data_plot.h	/^    int color_R, color_G, color_B;$/;"	m	class:DataPlot	access:private
color_R	data_plot.h	/^    int color_R, color_G, color_B;$/;"	m	class:DataPlot	access:private
getDataBounds	plotInputData.cpp	/^const QRectF& PlotInputData::getDataBounds() const$/;"	f	class:PlotInputData	signature:() const
getDataBounds	plotInputData.h	/^		const QRectF& getDataBounds() const;$/;"	p	class:PlotInputData	access:public	signature:() const
getDatas	plotInputData.cpp	/^vector<QwtArrayData>& PlotInputData::getDatas()$/;"	f	class:PlotInputData	signature:()
getDatas	plotInputData.h	/^		virtual vector< QwtArrayData>& getDatas();$/;"	p	class:PlotInputData	access:public	signature:()
getLabels	plotInputData.cpp	/^const QVector<QString>& PlotInputData::getLabels() const$/;"	f	class:PlotInputData	signature:() const
getLabels	plotInputData.h	/^		const QVector<QString>& getLabels() const;$/;"	p	class:PlotInputData	access:public	signature:() const
mDatas	plotInputData.h	/^		vector< QwtArrayData > mDatas;$/;"	m	class:PlotInputData	access:private
mLabels	plotInputData.h	/^		QVector<QString> mLabels;$/;"	m	class:PlotInputData	access:private
mPcurve	data_plot.h	/^    QwtPlotCurve *mPcurve;$/;"	m	class:DataPlot	access:private
mPlot	plotToolWidget.h	/^		DataPlot *mPlot;$/;"	m	class:PlotToolWidget	access:private
mPlotBound	plotInputData.h	/^		QRectF mPlotBound;$/;"	m	class:PlotInputData	access:private
main	main.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
plot	data_plot.cpp	/^void DataPlot::plot(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)$/;"	f	class:DataPlot	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
plot	data_plot.h	/^    void plot(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x);$/;"	p	class:DataPlot	access:public	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
plot	plotToolWidget.cpp	/^void PlotToolWidget::plot(const double **data, int row, int column)$/;"	f	class:PlotToolWidget	signature:(const double **data, int row, int column)
plot	plotToolWidget.h	/^		void plot(const double **data, int row, int column);$/;"	p	class:PlotToolWidget	access:public	signature:(const double **data, int row, int column)
refresh	plotToolWidget.cpp	/^void PlotToolWidget::refresh()$/;"	f	class:PlotToolWidget	signature:()
refresh	plotToolWidget.h	/^		void refresh();$/;"	p	class:PlotToolWidget	access:public	signature:()
setDataBounds	plotInputData.cpp	/^void PlotInputData::setDataBounds(QRectF &rec)$/;"	f	class:PlotInputData	signature:(QRectF &rec)
setDataBounds	plotInputData.h	/^		void setDataBounds(QRectF &rec);$/;"	p	class:PlotInputData	access:public	signature:(QRectF &rec)
setupCurve	data_plot.cpp	/^void DataPlot::setupCurve(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)$/;"	f	class:DataPlot	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
setupCurve	data_plot.h	/^    void setupCurve(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x);$/;"	p	class:DataPlot	access:private	signature:(QwtArray< QwtArray<double> > &matrix, QwtArray< double >& x)
setupUI	data_plot.cpp	/^void DataPlot::setupUI()$/;"	f	class:DataPlot	signature:()
setupUI	data_plot.h	/^    void setupUI();$/;"	p	class:DataPlot	access:private	signature:()
~DataPlot	data_plot.cpp	/^DataPlot::~DataPlot()$/;"	f	class:DataPlot	signature:()
~DataPlot	data_plot.h	/^    ~DataPlot();$/;"	p	class:DataPlot	access:public	signature:()
~PlotInputData	plotInputData.cpp	/^PlotInputData::~PlotInputData()$/;"	f	class:PlotInputData	signature:()
~PlotInputData	plotInputData.h	/^		virtual ~PlotInputData();$/;"	p	class:PlotInputData	access:public	signature:()
~PlotToolWidget	plotToolWidget.cpp	/^PlotToolWidget::~PlotToolWidget()$/;"	f	class:PlotToolWidget	signature:()
~PlotToolWidget	plotToolWidget.h	/^		~PlotToolWidget();$/;"	p	class:PlotToolWidget	access:public	signature:()

!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
MAINWINDOW_H	mainWindow.h	2;"	d
MainWindow	mainWindow.cpp	/^ MainWindow::MainWindow( QWidget* parent) : QMainWindow(parent)$/;"	f	class:MainWindow	signature:( QWidget* parent)
MainWindow	mainWindow.h	/^		MainWindow( QWidget* parent );$/;"	p	class:MainWindow	access:public	signature:( QWidget* parent )
MainWindow	mainWindow.h	/^class MainWindow: public QMainWindow$/;"	c	inherits:QMainWindow
MainWindow::MainWindow	mainWindow.cpp	/^ MainWindow::MainWindow( QWidget* parent) : QMainWindow(parent)$/;"	f	class:MainWindow	signature:( QWidget* parent)
MainWindow::MainWindow	mainWindow.h	/^		MainWindow( QWidget* parent );$/;"	p	class:MainWindow	access:public	signature:( QWidget* parent )
MainWindow::analySBML	mainWindow.cpp	/^void MainWindow::analySBML()$/;"	f	class:MainWindow	signature:()
MainWindow::analySBML	mainWindow.h	/^	void analySBML();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::loadFile	mainWindow.cpp	/^void MainWindow::loadFile(const QString &fileName)$/;"	f	class:MainWindow	signature:(const QString &fileName)
MainWindow::loadFile	mainWindow.h	/^		void loadFile(const QString &fileName);$/;"	p	class:MainWindow	access:private	signature:(const QString &fileName)
MainWindow::odeAnalysis	mainWindow.cpp	/^void MainWindow::odeAnalysis()$/;"	f	class:MainWindow	signature:()
MainWindow::odeAnalysis	mainWindow.h	/^	void odeAnalysis(); \/\/no used$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::open	mainWindow.cpp	/^void MainWindow::open()$/;"	f	class:MainWindow	signature:()
MainWindow::open	mainWindow.h	/^	void open();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::openSBML	mainWindow.cpp	/^void MainWindow::openSBML()$/;"	f	class:MainWindow	signature:()
MainWindow::openSBML	mainWindow.h	/^	void openSBML();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::setCurrentFile	mainWindow.cpp	/^void MainWindow::setCurrentFile(const QString &fileName)$/;"	f	class:MainWindow	signature:(const QString &fileName)
MainWindow::setCurrentFile	mainWindow.h	/^		void setCurrentFile(const QString &fileName);$/;"	p	class:MainWindow	access:private	signature:(const QString &fileName)
MainWindow::ui	mainWindow.h	/^		Ui::MainWindow ui;$/;"	m	class:MainWindow	access:private
_INTEGRATE_H_	integrate.h	2;"	d
analySBML	mainWindow.cpp	/^void MainWindow::analySBML()$/;"	f	class:MainWindow	signature:()
analySBML	mainWindow.h	/^	void analySBML();$/;"	p	class:MainWindow	access:private	signature:()
d	integrate.c	/^  SBMLDocument_free(d);$/;"	v
d	integrate.c	/^  SBMLDocument_t *d;$/;"	v
i	integrate.c	/^  int i, j;$/;"	v
intergrate	integrate.h	/^int intergrate(char *model, double time, double printstep);$/;"	p	signature:(char *model, double time, double printstep)
j	integrate.c	/^  int i, j;$/;"	v
loadFile	mainWindow.cpp	/^void MainWindow::loadFile(const QString &fileName)$/;"	f	class:MainWindow	signature:(const QString &fileName)
loadFile	mainWindow.h	/^		void loadFile(const QString &fileName);$/;"	p	class:MainWindow	access:private	signature:(const QString &fileName)
m	integrate.c	/^  Model_t *m;$/;"	v
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
model	integrate.c	/^  char *model;$/;"	v
odeAnalysis	mainWindow.cpp	/^void MainWindow::odeAnalysis()$/;"	f	class:MainWindow	signature:()
odeAnalysis	mainWindow.h	/^	void odeAnalysis(); \/\/no used$/;"	p	class:MainWindow	access:private	signature:()
open	mainWindow.cpp	/^void MainWindow::open()$/;"	f	class:MainWindow	signature:()
open	mainWindow.h	/^	void open();$/;"	p	class:MainWindow	access:private	signature:()
openSBML	mainWindow.cpp	/^void MainWindow::openSBML()$/;"	f	class:MainWindow	signature:()
openSBML	mainWindow.h	/^	void openSBML();$/;"	p	class:MainWindow	access:private	signature:()
printstep	integrate.c	/^  double printstep;$/;"	v
results	integrate.c	/^  SBMLResults_dump(results);$/;"	v
results	integrate.c	/^  SBMLResults_free(results);$/;"	v
results	integrate.c	/^  SBMLResults_t *results;$/;"	v
set	integrate.c	/^  CvodeSettings_free(set);$/;"	v
set	integrate.c	/^  cvodeSettings_t *set;$/;"	v
setCurrentFile	mainWindow.cpp	/^void MainWindow::setCurrentFile(const QString &fileName)$/;"	f	class:MainWindow	signature:(const QString &fileName)
setCurrentFile	mainWindow.h	/^		void setCurrentFile(const QString &fileName);$/;"	p	class:MainWindow	access:private	signature:(const QString &fileName)
sr	integrate.c	/^  SBMLReader_free(sr);$/;"	v
sr	integrate.c	/^  SBMLReader_t *sr;$/;"	v
tc	integrate.c	/^  timeCourse_t *tc;$/;"	v
time	integrate.c	/^  double time;$/;"	v
ui	mainWindow.h	/^		Ui::MainWindow ui;$/;"	m	class:MainWindow	access:private
